using System;
using System.Collections.Generic;

namespace Sanat.ApiGemini
{
    [Serializable]
    public class BaseParams
    {
        public GenerationConfig generationConfig;
        public List<SafetySetting> safetySettings;
    }

    [Serializable]
    public class BatchEmbedContentsRequest
    {
        public List<EmbedContentRequest> requests;
    }

    [Serializable]
    public class BatchEmbedContentsResponse
    {
        public List<ContentEmbedding> embeddings;
    }

    [Serializable]
    public class CachedContent : CachedContentBase
    {
        public string createTime;
        public string name;
        public string ttl;
        public string updateTime;
    }

    [Serializable]
    public class CachedContentBase
    {
        public List<Content> contents;
        public string displayName;
        public string expireTime;
        public string model;
        public string systemInstruction;
        public ToolConfig toolConfig;
        public List<Tool> tools;
    }

    [Serializable]
    public class CitationMetadata
    {
        public List<CitationSource> citationSources;
    }

    [Serializable]
    public class CitationSource
    {
        public int endIndex;
        public string license;
        public int startIndex;
        public string uri;
    }

    [Serializable]
    public class CodeExecutionResult
    {
        public string outcome;
        public string output;
    }

    [Serializable]
    public class CodeExecutionTool
    {
        public object codeExecution;
    }

    [Serializable]
    public class Content
    {
        public List<Part> parts;
        public string role;
    }

    [Serializable]
    public class ContentEmbedding
    {
        public List<float> values;
    }

    [Serializable]
    public class CountTokensRequest
    {
        public List<Content> contents;
        public GenerateContentRequest generateContentRequest;
    }

    [Serializable]
    public class CountTokensResponse
    {
        public int totalTokens;
    }

    [Serializable]
    public class EmbedContentRequest
    {
        public Content content;
        public string taskType;
        public string title;
    }

    [Serializable]
    public class EmbedContentResponse
    {
        public ContentEmbedding embedding;
    }

    [Serializable]
    public class EnhancedGenerateContentResponse : GenerateContentResponse
    {
    }

    [Serializable]
    public class ErrorDetails
    {
        public string @type;
        public string domain;
        public Dictionary<string, string> metadata;
        public string reason;
    }

    [Serializable]
    public class ExecutableCode
    {
        public string code;
        public string language;
    }

    [Serializable]
    public class FileData
    {
        public string fileUri;
        public string mimeType;
    }

    [Serializable]
    public class FunctionCall
    {
        public object args;
        public string name;
    }

    [Serializable]
    public class FunctionCallingConfig
    {
        public List<string> allowedFunctionNames;
        public string mode;
    }

    [Serializable]
    public class FunctionDeclaration
    {
        public string description;
        public string name;
        public FunctionDeclarationSchema parameters;
    }

    [Serializable]
    public class FunctionDeclarationSchema
    {
        public string description;
        public Dictionary<string, FunctionDeclarationSchemaProperty> properties;
        public List<string> required;
        public string type;
    }

    [Serializable]
    public class FunctionDeclarationSchemaProperty : Schema
    {
    }

    [Serializable]
    public class FunctionDeclarationsTool
    {
        public List<FunctionDeclaration> functionDeclarations;
    }

    [Serializable]
    public class FunctionResponse
    {
        public string name;
        public object response;
    }

    [Serializable]
    public class GenerateContentCandidate
    {
        public CitationMetadata citationMetadata;
        public Content content;
        public string finishMessage;
        public string finishReason;
        public int index;
        public List<SafetyRating> safetyRatings;
    }

    [Serializable]
    public class GenerateContentRequest : BaseParams
    {
        public string cachedContent;
        public List<Content> contents;
        public string systemInstruction;
        public ToolConfig toolConfig;
        public List<Tool> tools;
    }

    [Serializable]
    public class GenerateContentResponse
    {
        public List<GenerateContentCandidate> candidates;
        public PromptFeedback promptFeedback;
        public UsageMetadata usageMetadata;
    }

    [Serializable]
    public class GenerateContentResult
    {
        public EnhancedGenerateContentResponse response;
    }

    [Serializable]
    public class GenerateContentStreamResult
    {
        public EnhancedGenerateContentResponse response;
    }

    [Serializable]
    public class GenerationConfig
    {
        public int candidateCount;
        public int maxOutputTokens;
        public string responseMimeType;
        public ResponseSchema responseSchema;
        public List<string> stopSequences;
        public float temperature;
        public int topK;
        public float topP;
    }

    [Serializable]
    public class GenerativeContentBlob
    {
        public string data;
        public string mimeType;
    }

    [Serializable]
    public class InlineDataPart
    {
        public GenerativeContentBlob inlineData;
    }

    [Serializable]
    public class ModelParams : BaseParams
    {
        public CachedContent cachedContent;
        public string model;
        public string systemInstruction;
        public ToolConfig toolConfig;
        public List<Tool> tools;
    }

    [Serializable]
    public class Part
    {
        public string text;
        public GenerativeContentBlob inlineData;
        public FunctionCall functionCall;
        public FunctionResponse functionResponse;
        public FileData fileData;
        public ExecutableCode executableCode;
        public CodeExecutionResult codeExecutionResult;
    }

    [Serializable]
    public class PromptFeedback
    {
        public string blockReason;
        public string blockReasonMessage;
        public List<SafetyRating> safetyRatings;
    }

    [Serializable]
    public class RequestOptions
    {
        public string apiClient;
        public string apiVersion;
        public string baseUrl;
        public Dictionary<string, string> customHeaders;
        public int timeout;
    }

    [Serializable]
    public class ResponseSchema : Schema
    {
    }

    [Serializable]
    public class SafetyRating
    {
        public string category;
        public string probability;
    }

    [Serializable]
    public class SafetySetting
    {
        public string category;
        public string threshold;
    }

    [Serializable]
    public class Schema
    {
        public string description;
        public List<string> @enum;
        public object example;
        public string format;
        public FunctionDeclarationSchema items;
        public bool nullable;
        public Dictionary<string, FunctionDeclarationSchema> properties;
        public List<string> required;
        public string type;
    }

    [Serializable]
    public class SingleRequestOptions : RequestOptions
    {
    }

    [Serializable]
    public class StartChatParams : BaseParams
    {
        public string cachedContent;
        public List<Content> history;
        public string systemInstruction;
        public ToolConfig toolConfig;
        public List<Tool> tools;
    }

    [Serializable]
    public class TextPart
    {
        public string text;
    }

    [Serializable]
    public class Tool
    {
        public List<FunctionDeclaration> functionDeclarations;
        public object codeExecution;
    }

    [Serializable]
    public class ToolConfig
    {
        public FunctionCallingConfig functionCallingConfig;
    }

    [Serializable]
    public class UsageMetadata
    {
        public int cachedContentTokenCount;
        public int candidatesTokenCount;
        public int promptTokenCount;
        public int totalTokenCount;
    }
}
