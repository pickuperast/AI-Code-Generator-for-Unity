```json
[
  {
    "FilePath": "Assets\\Sanat\\CodeGenerator\\ApiGemini\\ApiGemini.cs",
    "Content": "using System;\nusing System.Collections.Generic;\n\nnamespace Sanat.ApiGemini\n{\n    public enum BlockReason\n    {\n        BLOCKED_REASON_UNSPECIFIED,\n        OTHER,\n        SAFETY\n    }\n\n    public enum ExecutableCodeLanguage\n    {\n        LANGUAGE_UNSPECIFIED,\n        PYTHON\n    }\n\n    public enum FinishReason\n    {\n        FINISH_REASON_UNSPECIFIED,\n        LANGUAGE,\n        MAX_TOKENS,\n        OTHER,\n        RECITATION,\n        SAFETY,\n        STOP\n    }\n\n    public enum FunctionCallingMode\n    {\n        ANY,\n        AUTO,\n        MODE_UNSPECIFIED,\n        NONE\n    }\n\n    public enum FunctionDeclarationSchemaType\n    {\n        ARRAY,\n        BOOLEAN,\n        INTEGER,\n        NUMBER,\n        OBJECT,\n        STRING\n    }\n\n    public enum HarmBlockThreshold\n    {\n        BLOCK_LOW_AND_ABOVE,\n        BLOCK_MEDIUM_AND_ABOVE,\n        BLOCK_NONE,\n        BLOCK_ONLY_HIGH,\n        HARM_BLOCK_THRESHOLD_UNSPECIFIED\n    }\n\n    public enum HarmCategory\n    {\n        HARM_CATEGORY_DANGEROUS_CONTENT,\n        HARM_CATEGORY_HARASSMENT,\n        HARM_CATEGORY_HATE_SPEECH,\n        HARM_CATEGORY_SEXUALLY_EXPLICIT,\n        HARM_CATEGORY_UNSPECIFIED\n    }\n\n    public enum HarmProbability\n    {\n        HARM_PROBABILITY_UNSPECIFIED,\n        HIGH,\n        LOW,\n        MEDIUM,\n        NEGLIGIBLE\n    }\n\n    public enum Outcome\n    {\n        OUTCOME_DEADLINE_EXCEEDED,\n        OUTCOME_FAILED,\n        OUTCOME_OK,\n        OUTCOME_UNSPECIFIED\n    }\n\n    public enum TaskType\n    {\n        CLASSIFICATION,\n        CLUSTERING,\n        RETRIEVAL_DOCUMENT,\n        RETRIEVAL_QUERY,\n        SEMANTIC_SIMILARITY,\n        TASK_TYPE_UNSPECIFIED\n    }\n\n    public interface BaseParams\n    {\n        GenerationConfig GenerationConfig { get; set; }\n        List<SafetySetting> SafetySettings { get; set; }\n    }\n\n    public interface BatchEmbedContentsRequest\n    {\n        List<EmbedContentRequest> Requests { get; set; }\n    }\n\n    public interface BatchEmbedContentsResponse\n    {\n        List<ContentEmbedding> Embeddings { get; set; }\n    }\n\n    public interface CachedContent : CachedContentBase\n    {\n        string CreateTime { get; set; }\n        string Name { get; set; }\n        string Ttl { get; set; }\n        string UpdateTime { get; set; }\n    }\n\n    public interface CachedContentBase\n    {\n        List<Content> Contents { get; set; }\n        string DisplayName { get; set; }\n        string ExpireTime { get; set; }\n        string Model { get; set; }\n        string SystemInstruction { get; set; }\n        ToolConfig ToolConfig { get; set; }\n        List<Tool> Tools { get; set; }\n    }\n\n    public interface CitationMetadata\n    {\n        List<CitationSource> CitationSources { get; set; }\n    }\n\n    public interface CitationSource\n    {\n        int EndIndex { get; set; }\n        string License { get; set; }\n        int StartIndex { get; set; }\n        string Uri { get; set; }\n    }\n\n    public interface CodeExecutionResult\n    {\n        Outcome Outcome { get; set; }\n        string Output { get; set; }\n    }\n\n    public interface Content\n    {\n        List<Part> Parts { get; set; }\n        string Role { get; set; }\n    }\n\n    public interface ContentEmbedding\n    {\n        List<float> Values { get; set; }\n    }\n\n    public interface CountTokensRequest\n    {\n        List<Content> Contents { get; set; }\n        GenerateContentRequest GenerateContentRequest { get; set; }\n    }\n\n    public interface CountTokensResponse\n    {\n        int TotalTokens { get; set; }\n    }\n\n    public interface EmbedContentRequest\n    {\n        Content Content { get; set; }\n        TaskType TaskType { get; set; }\n        string Title { get; set; }\n    }\n\n    public interface EmbedContentResponse\n    {\n        ContentEmbedding Embedding { get; set; }\n    }\n\n    public interface ExecutableCode\n    {\n        string Code { get; set; }\n        ExecutableCodeLanguage Language { get; set; }\n    }\n\n    public interface FileData\n    {\n        string FileUri { get; set; }\n        string MimeType { get; set; }\n    }\n\n    public interface FunctionCall\n    {\n        object Args { get; set; }\n        string Name { get; set; }\n    }\n\n    public interface FunctionCallingConfig\n    {\n        List<string> AllowedFunctionNames { get; set; }\n        FunctionCallingMode Mode { get; set; }\n    }\n\n    public interface FunctionDeclaration\n    {\n        string Description { get; set; }\n        string Name { get; set; }\n        FunctionDeclarationSchema Parameters { get; set; }\n    }\n\n    public interface FunctionDeclarationSchema\n    {\n        string Description { get; set; }\n        Dictionary<string, FunctionDeclarationSchemaProperty> Properties { get; set; }\n        List<string> Required { get; set; }\n        FunctionDeclarationSchemaType Type { get; set; }\n    }\n\n    public interface FunctionDeclarationSchemaProperty : Schema\n    {\n    }\n\n    public interface FunctionResponse\n    {\n        string Name { get; set; }\n        object Response { get; set; }\n    }\n\n    public interface GenerateContentCandidate\n    {\n        CitationMetadata CitationMetadata { get; set; }\n        Content Content { get; set; }\n        string FinishMessage { get; set; }\n        FinishReason FinishReason { get; set; }\n        int Index { get; set; }\n        List<SafetyRating> SafetyRatings { get; set; }\n    }\n\n    public interface GenerateContentRequest : BaseParams\n    {\n        string CachedContent { get; set; }\n        List<Content> Contents { get; set; }\n        string SystemInstruction { get; set; }\n        ToolConfig ToolConfig { get; set; }\n        List<Tool> Tools { get; set; }\n    }\n\n    public interface GenerateContentResponse\n    {\n        List<GenerateContentCandidate> Candidates { get; set; }\n        PromptFeedback PromptFeedback { get; set; }\n        UsageMetadata UsageMetadata { get; set; }\n    }\n\n    public interface GenerationConfig\n    {\n        int CandidateCount { get; set; }\n        int MaxOutputTokens { get; set; }\n        string ResponseMimeType { get; set; }\n        ResponseSchema ResponseSchema { get; set; }\n        List<string> StopSequences { get; set; }\n        float Temperature { get; set; }\n        int TopK { get; set; }\n        float TopP { get; set; }\n    }\n\n    public interface GenerativeContentBlob\n    {\n        string Data { get; set; }\n        string MimeType { get; set; }\n    }\n\n    public interface PromptFeedback\n    {\n        BlockReason BlockReason { get; set; }\n        string BlockReasonMessage { get; set; }\n        List<SafetyRating> SafetyRatings { get; set; }\n    }\n\n    public interface ResponseSchema : Schema\n    {\n    }\n\n    public interface SafetyRating\n    {\n        HarmCategory Category { get; set; }\n        HarmProbability Probability { get; set; }\n    }\n\n    public interface SafetySetting\n    {\n        HarmCategory Category { get; set; }\n        HarmBlockThreshold Threshold { get; set; }\n    }\n\n    public interface Schema\n    {\n        string Description { get; set; }\n        List<string> Enum { get; set; }\n        object Example { get; set; }\n        string Format { get; set; }\n        FunctionDeclarationSchema Items { get; set; }\n        bool Nullable { get; set; }\n        Dictionary<string, FunctionDeclarationSchema> Properties { get; set; }\n        List<string> Required { get; set; }\n        FunctionDeclarationSchemaType Type { get; set; }\n    }\n\n    public interface ToolConfig\n    {\n        FunctionCallingConfig FunctionCallingConfig { get; set; }\n    }\n\n    public interface UsageMetadata\n    {\n        int CachedContentTokenCount { get; set; }\n        int CandidatesTokenCount { get; set; }\n        int PromptTokenCount { get; set; }\n        int TotalTokenCount { get; set; }\n    }\n\n    public class Part\n    {\n        public string Text { get; set; }\n        public GenerativeContentBlob InlineData { get; set; }\n        public FunctionCall FunctionCall { get; set; }\n        public FunctionResponse FunctionResponse { get; set; }\n        public FileData FileData { get; set; }\n        public ExecutableCode ExecutableCode { get; set; }\n        public CodeExecutionResult CodeExecutionResult { get; set; }\n    }\n\n    public class Tool\n    {\n        public List<FunctionDeclaration> FunctionDeclarations { get; set; }\n        public object CodeExecution { get; set; }\n    }\n}"
  }
]
```