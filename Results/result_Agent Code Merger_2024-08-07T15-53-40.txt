C#
using System.Linq;
using UnityEditor;
using UnityEngine;

namespace _ZombieRoyale.Scripts.Dungeon
{
    [CustomEditor(typeof(DungeonHolderNetworked))]
    public class DungeonHolderNetworkedEditor : Editor
    {
        private DungeonHolderNetworked _dungeonHolderNetworked;
    
        private void OnEnable()
        {
            _dungeonHolderNetworked = target as DungeonHolderNetworked;
        }

        public override void OnInspectorGUI()
        {
            base.OnInspectorGUI();
            if (_dungeonHolderNetworked == null)
            {
                return;
            }
            GUILayout.Space(20);
            EditorGUILayout.LabelField($"Current Dungeon:", EditorStyles.boldLabel);
            if (_dungeonHolderNetworked.CurrentDungeon != null)
            {
                EditorGUILayout.LabelField($"Dungeon Name: {_dungeonHolderNetworked.CurrentDungeon.name}");
                EditorGUILayout.LabelField($"Dungeon Scene: {_dungeonHolderNetworked.CurrentDungeon.Scene.name}");
            }
            else
            {
                EditorGUILayout.LabelField($"No Dungeon loaded");
            }
            GUILayout.Space(20);
            if (GUILayout.Button("Create Dungeon Object"))
            {
                CreateDungeonObject();
            }
            GUILayout.Space(10);
            if (GUILayout.Button("Add Dungeon to Library"))
            {
                AddDungeonToLibrary();
            }
        }

        private void CreateDungeonObject()
        {
            var go = new GameObject("Dungeon");
            go.AddComponent<DungeonHolder>();
            Selection.activeGameObject = go;
        }

        private void AddDungeonToLibrary()
        {
            if (_dungeonHolderNetworked.CurrentDungeon == null)
            {
                Debug.LogWarning("No dungeon loaded. Please load a dungeon first.");
                return;
            }

            // Find the DungeonLibrary asset.
            var dungeonLibraryAsset = AssetDatabase.FindAssets("t:DungeonLibrary").Select(AssetDatabase.GUIDToAssetPath).FirstOrDefault();
            if (string.IsNullOrEmpty(dungeonLibraryAsset))
            {
                Debug.LogWarning("No DungeonLibrary asset found. Please create one first.");
                return;
            }

            // Load the DungeonLibrary asset.
            var dungeonLibrary = AssetDatabase.LoadAssetAtPath<DungeonLibrary>(dungeonLibraryAsset);
            if (dungeonLibrary == null)
            {
                Debug.LogWarning("Failed to load DungeonLibrary asset.");
                return;
            }

            // Add the current dungeon to the library.
            dungeonLibrary.AddDungeon(_dungeonHolderNetworked.CurrentDungeon);

            // Save the DungeonLibrary asset.
            EditorUtility.SetDirty(dungeonLibrary);
            AssetDatabase.SaveAssets();
            AssetDatabase.Refresh();
        }
    }
}
