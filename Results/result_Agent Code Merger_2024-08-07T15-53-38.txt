C#
using System.Collections.Generic;
using Photon.Pun;
using UnityEngine;

namespace _ZombieRoyale.Scripts.Dungeon
{
    public class DungeonHolderNetworked : MonoBehaviourPunCallbacks
    {
        public List<GameObject> RoomsPrefabs;
        public Transform RoomsContainer;
        public float CollapsingTime = 10f;
        public float CollapsingTimeOffset = 10f;
        public bool AutoSpawnRooms;

        private Dictionary<int, RoomInfo> _roomInfosDict;
        public Dictionary<int, RoomInfo> RoomInfosDict => _roomInfosDict;

        private void Awake()
        {
            _roomInfosDict = new Dictionary<int, RoomInfo>();
            if (AutoSpawnRooms)
            {
                SpawnRooms();
            }
        }

        private void SpawnRooms()
        {
            foreach (var roomPrefab in RoomsPrefabs)
            {
                GameObject spawnedRoom = Instantiate(roomPrefab, RoomsContainer);
                RoomInfo roomInfo = new RoomInfo
                {
                    RoomId = spawnedRoom.GetComponent<Room>().RoomId,
                    CollapsingTime = CollapsingTime + Random.Range(0f, CollapsingTimeOffset)
                };
                _roomInfosDict.Add(roomInfo.RoomId, roomInfo);
            }
        }

        public RoomInfo GetRoomInfo(int roomId)
        {
            if (_roomInfosDict.ContainsKey(roomId))
            {
                return _roomInfosDict[roomId];
            }
            return null;
        }

        public RoomInfo GetRoomInfo(GameObject room)
        {
            if (room.TryGetComponent<Room>(out var roomComponent))
            {
                return _roomInfosDict[roomComponent.RoomId];
            }
            return null;
        }

        public float ServerUptime => (Time.time - PhotonNetwork.Time) * 1000f;
    }

    public class RoomInfo
    {
        public int RoomId;
        public float CollapsingTime;
    }
}
